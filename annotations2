import xml.etree.ElementTree as ET
import tensorflow as tf
from os import path
import numpy as np
import glob
import io

classes = ["fullgolfclub", "golfball", "golfclub", "golfer", "golfer_front"]
tfrecords_size = 1000


def convert_to_tfrecord(xml, record_writer):
    orig_name = xml.split('.')[0]
    #print("Hello " + orig_name)
    
    name, _ = xml.split('/')[-1].split('.')
    root = ET.parse(xml.encode('utf-8')).getroot()
    xmins = []
    ymins = []
    xmaxs = []
    ymaxs = []
    labels = []
    for obj in root.iter('object'):
        difficult = obj.find('difficult').text
        cls = obj.find('name').text
        if cls not in classes or int(difficult) == 1:
            continue
        cls_id = classes.index(cls)
        xmlbox = obj.find('bndbox')
        xmins.append(float(xmlbox.find('xmin').text))
        ymins.append(float(xmlbox.find('ymin').text))
        xmaxs.append(float(xmlbox.find('xmax').text))
        ymaxs.append(float(xmlbox.find('ymax').text))
        labels.append(int(cls_id))

    image_files = tf.io.gfile.glob(orig_name + '.jp*g')
    if len(image_files) == 0:
      print("Image missing " + name)
      return

    image_data = tf.io.read_file(orig_name + '.jpg')
    #test = tf.compat.as_bytes( image_data, encoding='utf-8' )
    

    example = tf.train.Example(features=tf.train.Features(
        feature={
            'image/encoded':
            tf.train.Feature(bytes_list=tf.train.BytesList(value=[image_data])),
            'image/object/bbox/name':
            tf.train.Feature(bytes_list=tf.train.BytesList(value=[name.encode('utf-8')])),
            'image/object/bbox/xmin':
            tf.train.Feature(float_list=tf.train.FloatList(value=xmins)),
            'image/object/bbox/xmax':
            tf.train.Feature(float_list=tf.train.FloatList(value=xmaxs)),
            'image/object/bbox/ymin':
            tf.train.Feature(float_list=tf.train.FloatList(value=ymins)),
            'image/object/bbox/ymax':
            tf.train.Feature(float_list=tf.train.FloatList(value=ymaxs)),
            'image/object/bbox/label':
            tf.train.Feature(float_list=tf.train.FloatList(value=labels))
        }))
    record_writer.write(example.SerializeToString())

#test = glob.glob("/content/mobilenetv2-yolov3/AllDataStripped/Train/wolff/frame470.jpg")
#print("test" + str(len(test)))
#exit


index = 0
all_files = glob.glob("/content/mobilenetv2-yolov3/AllDataStripped/Train/*/*.xml")
record_writer = None

for xml in all_files:
  if index % 1000 == 0:
    if record_writer != None:
      record_writer.close()
    
    record_writer = tf.io.TFRecordWriter("file" + str(index / 1000)  + ".tfrecords")
  
  convert_to_tfrecord(xml, record_writer)  
